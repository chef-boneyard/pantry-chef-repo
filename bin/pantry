#!/bin/bash
#
# Author:: Joshua Timberman <joshua@chef.io>
# Copyright (c) 2014, Chef Software, Inc. <legal@chef.io>
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# This is written in Bash instead of Ruby because we don't know what
# kind of local Ruby environment an end-user will have. Presumably,
# none, or not a "sane" one. We won't have a "sane" Ruby until ChefDK is
# installed, which is handled by this script.
#
# This script exits 100 if it isn't executed as root or with sudo.
# This script exits 110 if `install.sh` fails to install ChefDK.
# This script exits 120 if `berks vendor` fails for any reason.
#
# Any failing command run by this script may cause it to exit (or not)
# and return its own exit code (or 0).
if [ $USER != 'root' ]; then
    echo 'You must execute this script as root.'
    echo "sudo ${0}"
    exit 100
fi

while getopts cu opt
do
    case "$opt" in
        c) run_chef=true;;
        u) upgrade=true;;
    esac
done
shift `expr $OPTIND - 1`

if [ "x$upgrade" = "xtrue" ]
then
    if [ `which pkgutil` ]
    then
        echo 'Removing existing ChefDK installation'
        # this is the part of the show where we wish pkgutil had an
        # uninstall option. Also, we assume reinstall down yonder, so
        # we don't bother with the links in `/usr/bin`.
        pkgutil --forget com.getchef.pkg.chefdk && rm -rf /opt/chefdk
    fi
    echo 'Removing Berksfile.lock so cookbooks can be updated'
    rm -f Berksfile.lock
fi

if [ ! -f /opt/chefdk/version-manifest.txt ]; then
    echo ''
    echo 'Downloading ChefDK.'
    curl -L https://www.chef.io/chef/install.sh | bash -s -- -P chefdk
    if [ $? -ne 0 ]; then
        echo 'Failed to install ChefDK. Exiting!'
        exit 110
    fi
fi

if [ ! -f Berksfile.lock ]
then
    echo 'Vendoring cookbooks with Berkshelf.'
    berks vendor && chmod 0644 Berksfile.lock
    if [ $? -ne 0 ]
    then
        echo ''
        echo 'Berkshelf failed to vendor required cookbooks!'
        exit 120
    fi
    echo ''
fi

if [ "x$run_chef" = "xtrue" ]
then
    echo 'Running `chef-client` with the pantry default recipe.'
    /opt/chefdk/embedded/bin/chef-client -z -r 'recipe[pantry]'
else
    echo 'To have this script automatically run Chef with the "base" role, run:'
    echo "$0 -c"
    exit 0
fi

exit 0
